import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Renderer, HostListener } from '@angular/core';
import { replaceClass, toBoolean } from '../util/util';
export var NglPopover = (function () {
    function NglPopover(element, renderer, changeDetector) {
        this.element = element;
        this.renderer = renderer;
        this.changeDetector = changeDetector;
        this.afterViewInit = new EventEmitter();
        this.onInteraction = new EventEmitter();
        this.renderer.setElementClass(this.element.nativeElement, 'slds-popover', true);
        // Prevent position changes of "close by" elements
        this.renderer.setElementStyle(this.element.nativeElement, 'position', 'absolute');
    }
    Object.defineProperty(NglPopover.prototype, "theme", {
        set: function (theme) {
            replaceClass(this, "slds-theme--" + this._theme, theme ? "slds-theme--" + theme : '');
            this._theme = theme;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglPopover.prototype, "nglTooltip", {
        set: function (isTooltip) {
            this.renderer.setElementClass(this.element.nativeElement, 'slds-popover--tooltip', toBoolean(isTooltip));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NglPopover.prototype, "nubbin", {
        set: function (direction) {
            replaceClass(this, "slds-nubbin--" + this._nubbin, direction ? "slds-nubbin--" + direction : '');
            this._nubbin = direction;
        },
        enumerable: true,
        configurable: true
    });
    NglPopover.prototype.ngAfterViewInit = function () {
        this.afterViewInit.emit(null);
    };
    NglPopover.prototype.interactiveHandler = function (evt, isEnter) {
        this.onInteraction.emit(isEnter);
    };
    NglPopover.decorators = [
        { type: Component, args: [{
                    selector: 'ngl-popover',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    template: "\n    <div class=\"slds-popover__body\"><ng-content></ng-content></div>\n  ",
                },] },
    ];
    /** @nocollapse */
    NglPopover.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
        { type: ChangeDetectorRef, },
    ]; };
    NglPopover.propDecorators = {
        'afterViewInit': [{ type: Output },],
        'onInteraction': [{ type: Output },],
        'theme': [{ type: Input },],
        'nglTooltip': [{ type: Input },],
        'interactiveHandler': [{ type: HostListener, args: ['mouseenter', ['$event', 'true'],] }, { type: HostListener, args: ['mouseleave', ['$event', 'false'],] },],
    };
    return NglPopover;
}());
//# sourceMappingURL=popover.js.map